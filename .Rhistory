renv::init()
renv::snapshot()
help(arimax)
??arimax
help(TSA::arimax)
install.packages("TSA")
help(arimax)
??arimax
devtools::document()
install.packages("devtools")
devtools::document()
devtools::document()
devtools::document()
devtools::document()
devtools::document()
??auto.ivarima
devtools::document()
??auto.ivarima
install.packages("styler")
styler::style_pkg()
install.packages("lintr")
lintr::lint_package()
lintr::lint_package()
lintr::lint_package()
lintr::lint_package()
lintr::lint_package()
lintr::lint_package()
install.packages("rmarkdown")
usethis::use_readme_rmd()
file.create(".git/hooks/pre-commit")
Sys.chmod(".git/hooks/pre-commit", mode = "0755")
git commit --no-verify -m "your commit message"
usethis::use_readme_rmd()
usethis::use_readme_rmd()
usethis::use_readme_rmd()
usethis::use_readme_rmd()
usethis::use_readme_rmd()
usethis::use_readme_rmd()
usethis::use_testthat()
install.packages("testthat")
usethis::use_test()
install.packages("pkgdown")
usethis::use_pkgdown()
pkgdown::build_site()
# 如果没有依赖到别的具有不同版权的第三方包的话，一般选择最为广泛使用的 MIT 即可
usethis::use_mit_license()
# 升级版本号
usethis::use_version()
# 升级版本号
usethis::use_version()
devtools::document()
devtools::load_all()
devtools::install()
auto.ivarima()
auto.arima()
library(Ivarima)
w0 <- 0.5
n <- 100
xt6 <- c(rep(0, 56), rep(1, 44))
e <- arima.sim(model = list(order = c(1, 0, 0), ar = 0.4, ma = NULL), n = 100, sd = 0.1)
xxt <- w0 * xt6
mu <- 4 + xxt
y <- mu + e
model <- auto.ivarima(y = y, its_start = 51, LTFmaxk = 10)
summary(model)
devtools::install_github("XYanSerenity/Ivarima")
devtools::document()
devtools::document()
library(renv)
renv::init()
renv::status()
renv::init()
library(usethis)
usethis::use_mit_license()
usethis::use_version()
devtools::check()
renv::snapshot()
install.packages("pheatmap")
# 生成随机数据矩阵
set.seed(123)  # 设置随机种子以确保可重复性
data_matrix <- matrix(runif(100, 1000, 200000), nrow=10, ncol=10)
# 绘制热力图
heatmap(data_matrix,
Rowv = NA, Colv = NA,  # 不进行行和列的聚类
col = heat.colors(256),  # 使用热色系
scale = "row",  # 按行标准化数据
main = "Heatmap of Random Data (1000-200000)")
# 安装并加载ggplot2包
install.packages("ggplot2")
# 创建数据框
data <- expand.grid(x = 1:3, y = 1:3)  # 3x3 的网格
data$value <- values  # 添加数值
# 数据
values <- seq(1, 0, length.out = 10)  # 生成从1到0的10个数值
# 将数据转换为1列10行的矩阵
data_matrix <- matrix(values, nrow = 10, ncol = 1)
# 绘制矩形热力图
image(data_matrix,
col = colorRampPalette(c("blue", "white", "red"))(100),  # 颜色渐变
axes = FALSE,  # 不显示默认坐标轴
main = "1x10 Matrix with Color Gradient")
# 添加坐标轴标签
axis(1, at = seq(0, 1, length.out = ncol(data_matrix)), labels = 1:ncol(data_matrix))
axis(2, at = seq(0, 1, length.out = nrow(data_matrix)), labels = 1:nrow(data_matrix))
# 设置随机种子以确保可重复性
set.seed(123)
# 生成时间序列
time <- seq(0, 10, by = 0.01)  # 从0到10秒，每隔0.01秒一个点
# 生成模拟的心率信号（使用正弦函数模拟周期性）
heart_rate <- 60 + 10 * sin(2 * pi * 1 * time)  # 基础心率60 bpm，波动幅度10 bpm
# 添加一些随机噪声以模拟真实信号
heart_rate <- heart_rate + rnorm(length(time), mean = 0, sd = 1)
# 绘制心率信号
plot(time, heart_rate, type = "l", col = "red",
xlab = "Time (s)", ylab = "Heart Rate (bpm)",
main = "Simulated Heart Rate Signal")
# 添加网格线
grid()
# 设置随机种子以确保可重复性
set.seed(123)
# 生成时间序列
time <- seq(0, 20, by = 0.01)  # 从0到20秒，每隔0.01秒一个点
# 生成正常心率信号（使用正弦函数模拟周期性）
heart_rate <- 60 + 10 * sin(2 * pi * 1 * time)  # 基础心率60 bpm，波动幅度10 bpm
# 添加一些随机噪声以模拟真实信号
heart_rate <- heart_rate + rnorm(length(time), mean = 0, sd = 1)
# 模拟心率异常升高
abnormal_time <- time >= 10 & time <= 15  # 在10到15秒之间模拟异常
heart_rate[abnormal_time] <- heart_rate[abnormal_time] + 30  # 心率突然升高30 bpm
# 绘制心率信号
plot(time, heart_rate, type = "l", col = "red",
xlab = "Time (s)", ylab = "Heart Rate (bpm)",
main = "Simulated Heart Rate with Abnormal Increase")
# 标记异常区域
abline(v = 10, col = "blue", lty = 2)  # 异常开始时间
abline(v = 15, col = "blue", lty = 2)  # 异常结束时间
text(x = 12.5, y = max(heart_rate) + 5, labels = "Abnormal Increase", col = "blue")
# 添加网格线
grid()
library(Rserve)
setwd("F:/Gethub R/Ivarima")
library(devtools)
devtools::document()
devtools::document()
devtools::document()
devtools::load_all()
devtools::install()
devtools::document()
install.packages("pak")
pak::pak("XYanSerenity/Ivarima")
